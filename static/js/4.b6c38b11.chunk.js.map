{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/addMessage/AddMessage.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Dialogs/Message/addMessage/addMessage.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Dialog","props","path","id","className","classes","dialog_name","src","alt","to","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","requiredField","component","Textarea","placeholder","cols","rows","addMessage","Dialogs","dialogsElements","dialogsData","map","el","messageElements","messageData","dialogs","dialogs_items","messages","values","newMessageBody","compose","connect","state","dialogsPage","newMessage","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,8B,oBCAvLD,EAAOC,QAAU,CAAC,YAAc,8B,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,+GCehDC,EAZA,SAACC,GACZ,IAAIC,EAAO,YAAYD,EAAME,GAC7B,OACI,sBAAKC,UAAWC,IAAQC,YAAxB,UACI,qBAAKC,IAAKN,EAAMM,IAAKC,IAAI,KACzB,cAAC,IAAD,CAASC,GAAIP,EAAb,SACKD,EAAMS,W,kBCDRC,EANA,SAACV,GACZ,OACI,qBAAKG,UAAWC,IAAQO,QAAxB,SAAkCX,EAAMW,W,mDCC1CC,EAAcC,YAAiB,IAoBtBC,EAFWC,YAAU,CAACC,KAAM,wBAAjBD,EAjBH,SAACf,GAEpB,OACI,uBAAMG,UAAWC,IAAQY,KAAMC,SAAUjB,EAAMkB,aAA/C,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAcT,GAAcU,UAAWC,IAAUd,KAAK,iBAAiBe,YAAY,qBAAqBC,KAAK,KAAKC,KAAK,QAG7I,qBAAKvB,UAAWC,IAAQuB,WAAxB,SACI,oGCqBDC,EA/BC,SAAC5B,GACb,IAAI6B,EAAkB7B,EAAM8B,YAAYC,KAAI,SAACC,GACzC,OAAO,cAAC,EAAD,CAAQ9B,GAAI8B,EAAG9B,GAAIO,KAAMuB,EAAGvB,KAAkBH,IAAK0B,EAAG1B,KAAf0B,EAAG9B,OAEjD+B,EAAkBjC,EAAMkC,YAAYH,KAAI,SAACC,GACzC,OAAO,cAAC,EAAD,CAAS9B,GAAI8B,EAAG9B,GAAgBS,QAASqB,EAAGrB,SAAnBqB,EAAG9B,OAKvC,OACI,sBAAKC,UAAWC,IAAQ+B,QAAxB,UACI,qBAAKhC,UAAWC,IAAQgC,cAAxB,SACKP,IAEL,sBAAK1B,UAAWC,IAAQiC,SAAxB,UACI,qBAAKlC,UAAWC,IAAQiC,SAAxB,SACKJ,IAGL,qBAAK9B,UAAWC,IAAQuB,WAAxB,SACI,cAAC,EAAD,CAAqBV,SAdlB,SAACqB,GAChBtC,EAAM2B,WAAWW,EAAOC,4B,wBC+BjBC,4BACXC,aATkB,SAACC,GACnB,MAAO,CACHZ,YAAaY,EAAMC,YAAYb,YAC/Bc,WAAYF,EAAMC,YAAYC,WAC9BV,YAAaQ,EAAMC,YAAYT,eAKV,CAACP,iBAC1BkB,IAFWL,CAGbZ","file":"static/js/4.b6c38b11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1T3_T\",\"dialogs_items\":\"Dialogs_dialogs_items__1M2-3\",\"active\":\"Dialogs_active__3uuGm\",\"messages\":\"Dialogs_messages__VYcEZ\",\"addMessage\":\"Dialogs_addMessage__EPcze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_name\":\"Dialog_dialog_name__1nnmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__20JE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddMessage_form__1-ULQ\",\"addMessage\":\"AddMessage_addMessage__1OKfq\"};","import {NavLink} from \"react-router-dom\";\r\nimport classes from \"./Dialog.module.css\"\r\nimport * as React from 'react';\r\n\r\nconst Dialog = (props) => {\r\n    let path = \"/dialogs/\"+props.id;\r\n    return (\r\n        <div className={classes.dialog_name}>\r\n            <img src={props.src} alt=\"\"/>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;","import classes from \"./Message.module.css\";\r\nimport React from 'react'\r\n\r\nconst Message =(props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import classes from \"./AddMessage.module.css\"\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormComponents/FormComponents\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../helpers/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[requiredField,maxLength10]} component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" cols=\"75\" rows=\"2\"  />\r\n\r\n            </div>\r\n            <div className={classes.addMessage}>\r\n                <button >\r\n                    Отправить\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default AddMessageFormRedux;","import classes from \"./Dialogs.module.css\"\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageFormRedux from \"./Message/addMessage/addMessage\";\r\nimport React from 'react'\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsData.map((el) => {\r\n        return <Dialog id={el.id} name={el.name} key={el.id} src={el.src}/>\r\n    });\r\n    let messageElements = props.messageData.map((el) => {\r\n        return <Message id={el.id} key={el.id} message={el.message}/>\r\n    });\r\n    let addNewMessage =(values)=>{\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div className={classes.messages}>\r\n                    {messageElements}\r\n                </div>\r\n\r\n                <div className={classes.addMessage}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Dialogs;","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*const DialogsContainer = (props) => {\r\n\r\n\r\n    return <StoreContext.Consumer>\r\n        {store => {\r\n            let state = store.getState();\r\n            let dispatch = store.dispatch;\r\n            let addMessageEnter = (event) => {\r\n                if (event.key === 'Enter') {\r\n                    dispatch(addMessageActionCreator());\r\n                }\r\n            }\r\n            let addMessage = () => {\r\n                dispatch(addMessageActionCreator());\r\n\r\n            }\r\n            let onAreaChange = (e) => {\r\n                dispatch(updateLetterMessActionCreator(e));\r\n            }\r\n            return <Dialogs dialogsData={state.dialogsPage.dialogsData} newMessage={state.dialogsPage.newMessage}\r\n                            messageData={state.dialogsPage.messageData}\r\n                            addMessage={addMessage} addMessageEnter={addMessageEnter} onAreaChange={onAreaChange}/>\r\n        }\r\n        }\r\n    </StoreContext.Consumer>;\r\n\r\n}*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        newMessage: state.dialogsPage.newMessage,\r\n        messageData: state.dialogsPage.messageData,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}