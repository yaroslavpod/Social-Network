{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","assets/image/profile_photo.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/Posts.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","updateUserStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onClick","onChange","e","currentTarget","value","onBlur","autoFocus","onFocus","select","ProfileInfo","React","profile","getUserStatus","content","av_descr","src","photos","small","profilePhoto","alt","fullName","c","Post","item","message","likesCount","maxLength20","maxLengthCreator","AddNewPostForm","form","onSubmit","handleSubmit","Field","validate","requiredField","cols","rows","component","Textarea","name","placeholder","reduxForm","Posts","postElements","postsData","map","el","id","console","log","posts","values","addPost","newPostMessage","PostsContainer","connect","state","profilePage","Profile","Preloader","ProfileContainer","userId","this","match","params","authorizedUserID","history","push","getProfile","compose","authMenu","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.48f3875b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__2Ry-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3TWLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3JbvX\",\"fullName\":\"ProfileInfo_fullName__T9lgc\",\"av_descr\":\"ProfileInfo_av_descr__36cG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2ppDV\",\"form\":\"Posts_form__2XJk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3hKEu\"};","export default __webpack_public_path__ + \"static/media/profile_photo.d7120c35.png\";","import classes from \"./ProfileStatus.module.css\"\r\nimport * as React from \"react\";\r\nimport {useState,useEffect} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = ({updateUserStatus,...props}) => {\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n    const [status,setStatus] = useState(props.status);\r\n\r\n    const activatedEditMode =()=>{\r\n        setEditMode(true)\r\n    }\r\n    const deactivatedEditMode =()=>{\r\n        setEditMode(false);\r\n        updateUserStatus(status);\r\n    }\r\n    const handleFocus = (e) => {\r\n        e.currentTarget.select();\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        if(status !== props.status){\r\n            setStatus(props.status)\r\n        }\r\n    },[props.status])\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.status}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onClick={activatedEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode  &&\r\n            <div>\r\n                <input  onChange={onStatusChange} value={status}  onBlur={deactivatedEditMode} autoFocus={true} onFocus={handleFocus} />\r\n\r\n            </div>\r\n            }\r\n\r\n        </div>)\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import classes from \"./ProfileInfo.module.css\"\r\nimport profilePhoto from \"../../../assets/image/profile_photo.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport * as React from 'react';\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile,getUserStatus,updateUserStatus,status,...props}) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.av_descr}>\r\n                <img\r\n                    src= {profile.photos.small?profile.photos.small:profilePhoto}\r\n                    alt=\"\"/>\r\n                    <div className={classes.fullName}>\r\n                        {profile.fullName}\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} getUserStatus={getUserStatus} c{...props}/>\r\n                avatar +descr\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import classes from \"./ProfileStatus.module.css\"\r\nimport * as React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activatedEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    handleFocus = (e) => {\r\n        e.currentTarget.select();\r\n    }\r\n    deactivatedEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className={classes.status}>\r\n            {!this.state.editMode &&\r\n            <div>\r\n                <span onClick={this.activatedEditMode}>{this.props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {this.state.editMode &&\r\n            <div>\r\n                <input onChange={this.onStatusChange} value={this.state.status} onFocus={this.handleFocus}\r\n                       autoFocus={true} onBlur={this.deactivatedEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import classes from \"./Post.module.css\"\r\nimport React from 'react'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://w1.pngwing.com/pngs/793/504/png-transparent-avatar-icon-ninja-samurai-icon-design-red-smile-circle.png\" alt=\"\"/>\r\n            {props.message}\r\n            <div><span>Likes </span>{props.likesCount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import classes from \"./Posts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../helpers/validators/validators\";\r\nimport {Textarea} from \"../../common/FormComponents/FormComponents\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    let postElements = [...props.postsData]\r\n        .map((el) => {\r\n            return <Post id={el.id} message={el.message} key={el.id} likesCount={el.likesCount}/>\r\n        });\r\n\r\n    let addPostWall = (values) => {\r\n        props.addPost(values.newPostMessage);\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"render\")\r\n    })\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <h3>My post</h3>\r\n            <AddNewPostForm onSubmit={addPostWall}/>\r\n            <div>\r\n                New Post\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLength20 = maxLengthCreator(20);\r\nlet AddNewPostForm = (props) => {\r\n    return <form className={classes.form} onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[requiredField, maxLength20]} cols=\"30\" rows=\"5\" component={Textarea} name=\"newPostMessage\"\r\n                   placeholder=\"Enter your post here\"/>\r\n        </div>\r\n        <div>\r\n            <button>\r\n                Отправить\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\nAddNewPostForm = reduxForm({form: \"AddPostForm\"})(AddNewPostForm)\r\n\r\nexport default Posts;","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n       postsData:state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps,{\r\n    addPost\r\n})(Posts);\r\n\r\nexport default PostsContainer;","import classes from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport React from 'react'\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile={props.profile} {...props}/>\r\n            <PostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Profile;","import * as React from \"react\"\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, setProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId ) {\r\n            userId = this.props.authorizedUserID;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n    }\r\n    render() {\r\n\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile:state.profilePage.profile,\r\n        status:state.profilePage.status,\r\n        authorizedUserID:state.authMenu.id,\r\n        isAuth:state.authMenu.isAuth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,{\r\n        getProfile,\r\n        getUserStatus,\r\n        updateUserStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}